// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model TimeSlot {
  id        String   @id @default(cuid())
  dayOfWeek Int      // 1 = Monday, 7 = Sunday
  startTime String   // "14:00" format
  endTime   String   // "16:00" format  
  duration  Int      // 30 or 60 minutes
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  appointments Appointment[]

  @@map("time_slots")
}

model Appointment {
  id               String            @id @default(cuid())
  name            String
  email           String
  phone           String
  consultationType ConsultationType
  preferredDate   DateTime
  status          AppointmentStatus @default(PENDING)
  notes           String?
  
  // Meeting details
  meetingLink     String?           // Google Meet link
  meetingId       String?           // Meeting ID for reference
  timezone        String?           // Patient's timezone (e.g., "Europe/London", "America/New_York")
  
  // Email tracking
  patientEmailSent Boolean @default(false)
  adminEmailSent   Boolean @default(false)
  
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt

  timeSlot   TimeSlot @relation(fields: [timeSlotId], references: [id])
  timeSlotId String

  @@map("appointments")
}

enum ConsultationType {
  INJECTIONS
  PILLS
  SURGERY
  GENERAL
}

enum AppointmentStatus {
  PENDING
  CONFIRMED
  COMPLETED
  CANCELLED
  NO_SHOW
}

model RiskAssessment {
  id        String   @id @default(cuid())
  
  // Personal Information
  name      String
  email     String
  phone     String
  
  // Physical Information
  heightFeet    Int?
  heightInches  Int?
  heightCm      Int?
  weightStone   Int?
  weightPounds  Int?
  weightKg      Int?
  unitSystem    String // 'imperial' or 'metric'
  
  // Assessment Data
  responses     Json     // Stores all question responses
  status        AssessmentStatus @default(PENDING)
  
  // Admin Notes
  adminNotes    String?
  reviewedBy    String?
  reviewedAt    DateTime?
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("risk_assessments")
}

enum AssessmentStatus {
  PENDING
  REVIEWED
  APPROVED
  REJECTED
  REQUIRES_FOLLOWUP
}

// E-commerce Order Management Models
model Order {
  id                String       @id @default(cuid())
  orderNumber       String       @unique // NWLC-XXXXXX format
  
  // Customer Information
  customerEmail     String
  customerName      String
  customerPhone     String?
  
  // Order Totals
  subtotal          Float
  taxAmount         Float        @default(0)
  shippingAmount    Float        @default(0)
  totalAmount       Float
  
  // Order Status
  status            OrderStatus  @default(PENDING)
  paymentStatus     PaymentStatus @default(PENDING)
  
  // Stripe Payment Information
  stripeSessionId       String?    // Stripe Checkout Session ID
  stripePaymentIntentId String?    // Stripe Payment Intent ID
  stripeCustomerId      String?    // Stripe Customer ID for future payments
  paidAt                DateTime?  // When payment was completed
  
  // Prescription Requirements
  prescriptionRequired Boolean   @default(false)
  prescriptionUploaded Boolean   @default(false)
  prescriptionNotes    String?
  
  // Medical Review
  medicalReviewStatus  MedicalReviewStatus @default(PENDING)
  reviewedBy          String?
  reviewedAt          DateTime?
  medicalNotes        String?
  
  // Shipping Information
  shippingStreet      String
  shippingCity        String
  shippingPostalCode  String
  shippingCountry     String     @default("United Kingdom")
  
  // Billing Information (optional, defaults to shipping)
  billingStreet       String?
  billingCity         String?
  billingPostalCode   String?
  billingCountry      String?
  
  // Additional Information
  specialInstructions String?
  marketingOptIn      Boolean    @default(false)
  
  // Tracking
  trackingNumber      String?
  estimatedDelivery   DateTime?
  deliveredAt         DateTime?
  
  // Timestamps
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt
  
  // Relations
  orderItems          OrderItem[]
  orderStatusHistory  OrderStatusHistory[]
  
  @@map("orders")
}

model OrderItem {
  id          String @id @default(cuid())
  
  // Product Information
  productId   String
  productName String
  productSlug String
  category    ProductCategory
  variant     String? // dosage, strength, etc.
  
  // Pricing
  unitPrice   Float
  quantity    Int
  totalPrice  Float
  
  // Product Details
  productImage String?
  productDescription String?
  isPrescription Boolean @default(true)
  
  // Relations
  order       Order  @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId     String
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("order_items")
}

model OrderStatusHistory {
  id        String   @id @default(cuid())
  
  status    OrderStatus
  notes     String?
  updatedBy String?  // Admin user who made the change
  
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   String
  
  createdAt DateTime @default(now())
  
  @@map("order_status_history")
}

enum OrderStatus {
  PENDING           // Order placed, awaiting payment
  PAYMENT_PENDING   // Payment in progress
  PAID              // Payment completed
  PAYMENT_FAILED    // Payment failed
  MEDICAL_REVIEW    // Under medical review
  APPROVED          // Medically approved, ready for processing
  REJECTED          // Medically rejected
  PROCESSING        // Being prepared for shipment
  SHIPPED           // Dispatched
  DELIVERED         // Delivered to customer
  CANCELLED         // Cancelled by customer or admin
  REFUNDED          // Refunded
}

enum PaymentStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
  CANCELLED
  REFUNDED
  PARTIALLY_REFUNDED
}

enum MedicalReviewStatus {
  PENDING           // Awaiting medical review
  UNDER_REVIEW      // Currently being reviewed
  APPROVED          // Medically approved
  REJECTED          // Medically rejected
  REQUIRES_CONSULTATION // Needs customer consultation
}

enum ProductCategory {
  INJECTIONS
  PILLS_TABLETS
  BARIATRIC_SURGERY
}